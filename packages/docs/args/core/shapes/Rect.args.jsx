// WARNING: do not edit this file directly, it is generated dynamically from
// the source JSDOC comments using the npm run docs script.

import React from "react";
import {argTypes as shapeArgTypes} from "./Shape.args.jsx";
import {assign} from "@d3plus/dom";

import {Rect as D3plusRect} from "@d3plus/react";
export const Rect = ({ config }) => <D3plusRect config={config} />;

export const argTypes = assign(

  /**
   * Filters out unused argTypes from the Shape primitive and
   * overrides any defaults that have been changed in Rect
   */
  Object.keys(shapeArgTypes)
    .reduce((obj, k) => (obj[k] = shapeArgTypes[k], obj), {}),

  /**
   * Rect-specific methods
   */
  
  {
    height: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"height\"]",
      table: {
        defaultValue: {
          detail: "d => d[\"height\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    labelBounds: {
      control: {},
      defaultValue: "(d, i, s) => ({width: s.width, height: s.height, x: -s.width / 2, y: -s.height / 2})",
      description: "The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`. If an array is returned from the function, each value will be used in conjunction with each label.",
      table: {
        defaultValue: {
          detail: "(d, i, s) => ({width: s.width, height: s.height, x: -s.width / 2, y: -s.height / 2})",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function"
      }
    },
    render: {
      control: {},
      table: {
        defaultValue: {
          summary: "undefined"
        }
      },
      type: {
        required: false,
        summary: "function"
      }
    },
    width: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"width\"]",
      table: {
        defaultValue: {
          detail: "d => d[\"width\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    }
  }
);
