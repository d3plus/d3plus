// WARNING: do not edit this file directly, it is generated dynamically from
// the source JSDOC comments using the npm run docs script.

import React from "react";
import {argTypes as shapeArgTypes} from "./Shape.args.jsx";
import {assign} from "@d3plus/dom";

import {Bar as D3plusBar} from "@d3plus/react";
export const Bar = ({ config }) => <D3plusBar config={config} />;

export const argTypes = assign(

  /**
   * Filters out unused argTypes from the Shape primitive and
   * overrides any defaults that have been changed in Bar
   */
  Object.keys(shapeArgTypes)
    .reduce((obj, k) => (obj[k] = shapeArgTypes[k], obj), {}),

  /**
   * Bar-specific methods
   */
  
  {
    height: {
      control: {
        type: "number"
      },
      defaultValue: 10,
      description: "If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          summary: 10
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    labelBounds: {
      control: {},
      defaultValue: "(d, i, s) => ({width: s.width, height: s.height, x: this._x1 !== null ? this._getX(d, i) : -s.width / 2, y: this._x1 === null ? this._getY(d, i) : -s.height / 2})",
      description: "If *bounds* is specified, sets the label bounds to the specified function and returns the current class instance. If *bounds* is not specified, returns the current inner bounds accessor.",
      table: {
        defaultValue: {
          detail: "(d, i, s) => ({width: s.width, height: s.height, x: this._x1 !== null ? this._getX(d, i) : -s.width / 2, y: this._x1 === null ? this._getY(d, i) : -s.height / 2})",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function"
      }
    },
    render: {
      control: {},
      description: "Draws the bars.",
      table: {
        defaultValue: {
          summary: "undefined"
        }
      },
      type: {
        required: false,
        summary: "function"
      }
    },
    width: {
      control: {
        type: "number"
      },
      defaultValue: 10,
      description: "If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          summary: 10
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    x: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"x\"]",
      description: "If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          detail: "d => d[\"x\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    x0: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"x\"]",
      description: "If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          detail: "d => d[\"x\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    x1: {
      control: {
        type: "number"
      },
      defaultValue: "null",
      description: "If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          summary: "null"
        }
      },
      type: {
        required: false,
        summary: "function | number | null"
      }
    },
    y: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      description: "If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    y0: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      description: "If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    y1: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"y\"]",
      description: "If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance.",
      table: {
        defaultValue: {
          detail: "d => d[\"y\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number | null"
      }
    }
  }
);
