// WARNING: do not edit this file directly, it is generated dynamically from
// the source JSDOC comments using the npm run docs script.

import React from "react";

import {Image as D3plusImage} from "@d3plus/react";
export const Image = ({ config }) => <D3plusImage config={config} />;

export const argTypes = {
  data: {
    control: {
      type: "object"
    },
    defaultValue: "[]",
    description: "If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. An <image> tag will be drawn for each object in the array.",
    table: {
      defaultValue: {
        summary: "[]"
      }
    },
    type: {
      required: false,
      summary: "array"
    }
  },
  duration: {
    control: {
      type: "number"
    },
    defaultValue: 600,
    description: "If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.",
    table: {
      defaultValue: {
        summary: 600
      }
    },
    type: {
      required: false,
      summary: "number"
    }
  },
  height: {
    control: {
      type: "number"
    },
    description: "If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function | number"
    }
  },
  id: {
    control: {},
    description: "If *value* is specified, sets the id accessor to the specified function and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function"
    }
  },
  opacity: {
    control: {
      type: "number"
    },
    defaultValue: 1,
    description: "Sets the opacity of the image.",
    table: {
      defaultValue: {
        summary: 1
      }
    },
    type: {
      required: false,
      summary: "number"
    }
  },
  pointerEvents: {
    control: {
      type: "text"
    },
    defaultValue: "\"auto\"",
    description: "If *value* is specified, sets the pointer-events accessor to the specified function or string and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "\"auto\""
      }
    },
    type: {
      required: false,
      summary: "function | string"
    }
  },
  render: {
    control: {},
    description: "Renders the current Image to the page. If a *callback* is specified, it will be called once the images are done drawing.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function"
    }
  },
  select: {
    control: {
      type: "text"
    },
    defaultValue: "d3.select(\"body\").append(\"svg\")",
    description: "If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.",
    table: {
      defaultValue: {
        summary: "d3.select(\"body\").append(\"svg\")"
      }
    },
    type: {
      required: false,
      summary: "string | htmlelement"
    }
  },
  url: {
    control: {},
    description: "If *value* is specified, sets the URL accessor to the specified function and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function"
    }
  },
  width: {
    control: {
      type: "number"
    },
    description: "If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function | number"
    }
  },
  x: {
    control: {
      type: "number"
    },
    description: "If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function | number"
    }
  },
  y: {
    control: {
      type: "number"
    },
    description: "If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.",
    table: {
      defaultValue: {
        summary: "undefined"
      }
    },
    type: {
      required: false,
      summary: "function | number"
    }
  }
};
