// WARNING: do not edit this file directly, it is generated dynamically from
// the source JSDOC comments using the npm run docs script.

import React from "react";
import {argTypes as vizArgTypes} from "./Viz.args.jsx";
import {assign} from "@d3plus/dom";

import {Priestley as D3plusPriestley} from "@d3plus/react";
export const Priestley = ({ config }) => <D3plusPriestley config={config} />;

export const argTypes = assign(

  /**
   * Filters out unused argTypes from the Viz primitive and
   * overrides any defaults that have been changed in Priestley
   */
  Object.keys(vizArgTypes)
    .filter(k => !k.match(/^(zoom.*)$/))
    .reduce((obj, k) => (obj[k] = vizArgTypes[k], obj), {}),

  /**
   * Priestley-specific methods
   */
  
  {
    axisConfig: {
      control: {
        type: "object"
      },
      defaultValue: "{scale: time}",
      table: {
        defaultValue: {
          summary: "{scale: time}"
        }
      },
      type: {
        required: false,
        summary: "object"
      }
    },
    end: {
      control: {
        type: "text"
      },
      defaultValue: "end",
      table: {
        defaultValue: {
          summary: "end"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    paddingInner: {
      control: {
        type: "number"
      },
      defaultValue: 0.05,
      table: {
        defaultValue: {
          summary: 0.05
        }
      },
      type: {
        required: false,
        summary: "number"
      }
    },
    paddingOuter: {
      control: {
        type: "number"
      },
      defaultValue: 0.05,
      table: {
        defaultValue: {
          summary: 0.05
        }
      },
      type: {
        required: false,
        summary: "number"
      }
    },
    shapeConfig: {
      control: {
        type: "object"
      },
      defaultValue: "assign({}, this._shapeConfig, {ariaLabel: (d, i) => `${this._drawLabel(d, i)}, ${this._start(d, i)} - ${this._end(d, i)}.`})",
      table: {
        defaultValue: {
          detail: "assign({}, this._shapeConfig, {ariaLabel: (d, i) => `${this._drawLabel(d, i)}, ${this._start(d, i)} - ${this._end(d, i)}.`})",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "object"
      }
    },
    start: {
      control: {
        type: "text"
      },
      defaultValue: "start",
      table: {
        defaultValue: {
          summary: "start"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    }
  }
);
