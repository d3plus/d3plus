// WARNING: do not edit this file directly, it is generated dynamically from
// the source JSDOC comments using the npm run docs script.

import React from "react";
import {argTypes as baseClassArgTypes} from "../utils/BaseClass.args.jsx";
import {assign} from "@d3plus/dom";

import {TextBox as D3plusTextBox} from "@d3plus/react";
export const TextBox = ({ config }) => <D3plusTextBox config={config} />;

export const argTypes = assign(

  /**
   * Filters out unused argTypes from the BaseClass primitive and
   * overrides any defaults that have been changed in TextBox
   */
  Object.keys(baseClassArgTypes)
    .reduce((obj, k) => (obj[k] = baseClassArgTypes[k], obj), {}),

  /**
   * TextBox-specific methods
   */
  
  {
    ariaHidden: {
      control: {
        type: "text"
      },
      defaultValue: "false",
      table: {
        defaultValue: {
          summary: "false"
        }
      },
      type: {
        required: true,
        summary: "function | string"
      }
    },
    data: {
      control: {
        type: "array"
      },
      defaultValue: "[]",
      table: {
        defaultValue: {
          summary: "[]"
        }
      },
      type: {
        required: false,
        summary: "array"
      }
    },
    delay: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "number"
      }
    },
    duration: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "number"
      }
    },
    ellipsis: {
      control: {
        type: "text"
      },
      defaultValue: "(text, line) => line ? `${text.replace(/\\.|,$/g, )}...` : ",
      table: {
        defaultValue: {
          detail: "(text, line) => line ? `${text.replace(/\\.|,$/g, )}...` : ",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    fontColor: {
      control: {
        type: "text"
      },
      defaultValue: "black",
      table: {
        defaultValue: {
          summary: "black"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    fontFamily: {
      control: {
        type: "array"
      },
      defaultValue: "fontFamily",
      table: {
        defaultValue: {
          summary: "fontFamily"
        }
      },
      type: {
        required: false,
        summary: "array | function | string"
      }
    },
    fontMax: {
      control: {
        type: "number"
      },
      defaultValue: 50,
      table: {
        defaultValue: {
          summary: 50
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    fontMin: {
      control: {
        type: "number"
      },
      defaultValue: 8,
      table: {
        defaultValue: {
          summary: 8
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    fontOpacity: {
      control: {
        type: "number"
      },
      defaultValue: 1,
      table: {
        defaultValue: {
          summary: 1
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    fontResize: {
      control: {
        type: "boolean"
      },
      defaultValue: false,
      table: {
        defaultValue: {
          summary: false
        }
      },
      type: {
        required: false,
        summary: "function | boolean"
      }
    },
    fontSize: {
      control: {
        type: "number"
      },
      defaultValue: 10,
      table: {
        defaultValue: {
          summary: 10
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    fontStroke: {
      control: {
        type: "text"
      },
      defaultValue: "transparent",
      table: {
        defaultValue: {
          summary: "transparent"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    fontStrokeWidth: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    fontWeight: {
      control: {
        type: "number"
      },
      defaultValue: 400,
      table: {
        defaultValue: {
          summary: 400
        }
      },
      type: {
        required: false,
        summary: "function | number | string"
      }
    },
    height: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"height\"] || 200",
      table: {
        defaultValue: {
          detail: "d => d[\"height\"] || 200",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    html: {
      control: {
        type: "object"
      },
      defaultValue: "defaultHtmlLookup",
      table: {
        defaultValue: {
          summary: "defaultHtmlLookup"
        }
      },
      type: {
        required: true,
        summary: "object | boolean"
      }
    },
    id: {
      control: {
        type: "number"
      },
      defaultValue: "(d, i) => d.id || `${i}`",
      table: {
        defaultValue: {
          detail: "(d, i) => d.id || `${i}`",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    lineHeight: {
      control: {
        type: "number"
      },
      defaultValue: "(d, i) => this._fontSize(d, i) * 1.2",
      table: {
        defaultValue: {
          detail: "(d, i) => this._fontSize(d, i) * 1.2",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    maxLines: {
      control: {
        type: "number"
      },
      defaultValue: "null",
      table: {
        defaultValue: {
          summary: "null"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    on: {
      control: {
        type: "text"
      },
      defaultValue: "{}",
      table: {
        defaultValue: {
          summary: "{}"
        }
      },
      type: {
        required: false,
        summary: "string"
      }
    },
    overflow: {
      control: {
        type: "boolean"
      },
      defaultValue: false,
      table: {
        defaultValue: {
          summary: false
        }
      },
      type: {
        required: false,
        summary: "function | boolean"
      }
    },
    padding: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "function | number | string"
      }
    },
    pointerEvents: {
      control: {
        type: "text"
      },
      defaultValue: "auto",
      table: {
        defaultValue: {
          summary: "auto"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    render: {
      control: {},
      table: {
        defaultValue: {
          summary: "undefined"
        }
      },
      type: {
        required: false,
        summary: "function"
      }
    },
    rotate: {
      control: {
        type: "number"
      },
      defaultValue: 0,
      table: {
        defaultValue: {
          summary: 0
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    rotateAnchor: {
      control: {
        type: "array.<number>"
      },
      defaultValue: "(d) => [\nd.w / 2,\nd.h / 2\n]",
      table: {
        defaultValue: {
          detail: "(d) => [\nd.w / 2,\nd.h / 2\n]",
          summary: "function"
        }
      },
      type: {
        required: true,
        summary: "function | array.<number>"
      }
    },
    select: {
      control: {
        type: "text"
      },
      table: {
        defaultValue: {
          summary: "undefined"
        }
      },
      type: {
        required: false,
        summary: "string | htmlelement"
      }
    },
    split: {
      control: {},
      defaultValue: "textSplit",
      table: {
        defaultValue: {
          summary: "textSplit"
        }
      },
      type: {
        required: false,
        summary: "function"
      }
    },
    text: {
      control: {
        type: "text"
      },
      defaultValue: "d => d[\"text\"]",
      table: {
        defaultValue: {
          detail: "d => d[\"text\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    textAnchor: {
      control: {
        type: "text"
      },
      defaultValue: "start",
      table: {
        defaultValue: {
          summary: "start"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    verticalAlign: {
      control: {
        type: "text"
      },
      defaultValue: "top",
      table: {
        defaultValue: {
          summary: "top"
        }
      },
      type: {
        required: false,
        summary: "function | string"
      }
    },
    width: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"width\"] || 200",
      table: {
        defaultValue: {
          detail: "d => d[\"width\"] || 200",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    x: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"x\"]",
      table: {
        defaultValue: {
          detail: "d => d[\"x\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    },
    y: {
      control: {
        type: "number"
      },
      defaultValue: "d => d[\"y\"]",
      table: {
        defaultValue: {
          detail: "d => d[\"y\"]",
          summary: "function"
        }
      },
      type: {
        required: false,
        summary: "function | number"
      }
    }
  }
);
