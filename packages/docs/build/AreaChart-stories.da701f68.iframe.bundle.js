"use strict";(self.webpackChunk_d3plus_docs=self.webpackChunk_d3plus_docs||[]).push([[772],{"./charts/AreaChart.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicExample:()=>BasicExample,ChangingAreaOpacity:()=>ChangingAreaOpacity,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AreaChart_stories});var react=__webpack_require__("./node_modules/react/index.js"),Plot_args=__webpack_require__("./args/Plot.args.js"),src_assign=__webpack_require__("./node_modules/d3plus-common/es/src/assign.js"),src_AreaPlot=__webpack_require__("./node_modules/d3plus-plot/es/src/AreaPlot.js"),Viz=__webpack_require__("./node_modules/d3plus-react/es/src/Viz.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const es_src_AreaPlot=function AreaPlot(props){return react.createElement(Viz.A,_extends({type:src_AreaPlot.A},props))},Area=({config})=>react.createElement(es_src_AreaPlot,{config}),argTypes=(0,src_assign.A)(Object.keys(Plot_args.U).reduce(((obj,k)=>(obj[k]=Plot_args.U[k],obj)),{}),{baseline:{defaultValue:0,table:{defaultValue:{summary:0}}},discrete:{defaultValue:"x",table:{defaultValue:{summary:"x"}}},shape:{table:{defaultValue:{summary:"Area"}}},x:{defaultValue:"x",table:{defaultValue:{summary:"x"}}}});Area.__docgenInfo={description:"",methods:[],displayName:"Area"};var configify=__webpack_require__("./helpers/configify.js");const AreaChart_stories={title:"Charts/Area Chart",component:Area,argTypes},Template=args=>react.createElement(Area,{config:(0,configify.A)(args,argTypes)}),BasicExample=Template.bind({});BasicExample.args={data:[{id:"alpha",x:1,y:7},{id:"alpha",x:2,y:2},{id:"alpha",x:3,y:13},{id:"alpha",x:4,y:4},{id:"alpha",x:5,y:22},{id:"alpha",x:6,y:13}],groupBy:"id",x:"x",y:"y"};const ChangingAreaOpacity=Template.bind({});ChangingAreaOpacity.args={data:[{id:"alpha",x:1,y:7},{id:"alpha",x:2,y:2},{id:"alpha",x:3,y:13},{id:"alpha",x:4,y:4},{id:"alpha",x:5,y:22},{id:"beta",x:1,y:10},{id:"beta",x:2,y:6},{id:"beta",x:3,y:3},{id:"beta",x:4,y:12},{id:"beta",x:5,y:11}],groupBy:"id",shapeConfig:{fill:"red",Area:{fillOpacity:.5}}},ChangingAreaOpacity.parameters={controls:{include:["shapeConfig"]}};const __namedExportsOrder=["BasicExample","ChangingAreaOpacity"];BasicExample.parameters={...BasicExample.parameters,docs:{...BasicExample.parameters?.docs,source:{originalSource:"args => <Viz config={configify(args, argTypes)} />",...BasicExample.parameters?.docs?.source}}},ChangingAreaOpacity.parameters={...ChangingAreaOpacity.parameters,docs:{...ChangingAreaOpacity.parameters?.docs,source:{originalSource:"args => <Viz config={configify(args, argTypes)} />",...ChangingAreaOpacity.parameters?.docs?.source}}}}}]);