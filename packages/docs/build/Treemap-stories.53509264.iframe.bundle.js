"use strict";(self.webpackChunk_d3plus_docs=self.webpackChunk_d3plus_docs||[]).push([[15],{"./charts/Treemap.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicExample:()=>BasicExample,ChangingTilingMethod:()=>ChangingTilingMethod,NestedData:()=>NestedData,SmallDataThreshold:()=>SmallDataThreshold,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Treemap_stories});var react=__webpack_require__("./node_modules/react/index.js"),Viz_args=__webpack_require__("./args/Viz.args.js"),src_assign=__webpack_require__("./node_modules/d3plus-common/es/src/assign.js"),Treemap=__webpack_require__("./node_modules/d3plus-react/es/src/Treemap.js");const Treemap_args_Treemap=({config})=>react.createElement(Treemap.A,{config}),argTypes=(0,src_assign.A)(Object.keys(Viz_args.A.argTypes).filter((k=>!k.match(/^(discrete|shape|zoom.*)$/))).reduce(((obj,k)=>(obj[k]=Viz_args.A.argTypes[k],obj)),{}),{sum:{type:{summary:"string | function",required:!0},table:{defaultValue:{summary:'"value"',detail:"d => d.value"}},description:"The accessor key for each data point used to calculate the size of each rectangle.",control:{type:"text"}},tile:{defaultValue:"squarify",type:{summary:"string | function"},table:{defaultValue:{summary:"squarify",detail:'import {treemapSquarify as squarify} from "d3-hierarchy";'}},description:"Sets the tiling method used when calcuating the size and position of the rectangles.\n\n  Can either be a string referring to a d3-hierarchy [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling), or a custom function in the same format.",control:{type:"select",options:["binary","dice","slice","sliceDice","squarify","resquarify"]}}});Treemap_args_Treemap.__docgenInfo={description:"",methods:[],displayName:"Treemap"};var configify=__webpack_require__("./helpers/configify.js");const Treemap_stories={title:"Charts/Treemap",component:Treemap_args_Treemap,argTypes},Template=args=>react.createElement(Treemap_args_Treemap,{config:(0,configify.A)(args,argTypes)}),BasicExample=Template.bind({});BasicExample.args={data:[{id:"alpha",value:29},{id:"beta",value:10},{id:"gamma",value:2},{id:"delta",value:29},{id:"eta",value:25}],groupBy:"id",sum:"value"},BasicExample.parameters={controls:{include:["sum"]}};const NestedData=Template.bind({});NestedData.args={data:[{parent:"Group 1",id:"alpha",value:29},{parent:"Group 1",id:"beta",value:10},{parent:"Group 1",id:"gamma",value:2},{parent:"Group 2",id:"delta",value:29},{parent:"Group 2",id:"eta",value:25}],groupBy:["parent","id"],sum:"value"},NestedData.parameters={controls:{include:["groupBy"]}};const ChangingTilingMethod=Template.bind({});ChangingTilingMethod.args={data:[{Group:"Store","Sub-Group":"Convenience Store","Number of Stores":100},{Group:"Store","Sub-Group":"Grocery Store","Number of Food Stores":150},{Group:"Store","Sub-Group":"Supercenters","Number of Food Stores":30},{Group:"Other","Sub-Group":"Farmer's Market","Number of Food Stores":50},{Group:"Restaurant","Sub-Group":"Fast-Food Restaurant","Number of Food Stores":60},{Group:"Restaurant","Sub-Group":"Full-Service Restaurant","Number of Food Stores":120}],groupBy:["Group","Sub-Group"],sum:"Number of Food Stores",tile:"slice"},ChangingTilingMethod.parameters={controls:{include:["tile"]}};const SmallDataThreshold=Template.bind({});SmallDataThreshold.args={colorScale:"Population",data:"https://datausa.io/api/data?measures=Population&drilldowns=State&Year=2018",groupBy:"State",sum:"Population",threshold:.0025,thresholdName:"States"},SmallDataThreshold.parameters={controls:{include:["threshold","thresholdName"]}};const __namedExportsOrder=["BasicExample","NestedData","ChangingTilingMethod","SmallDataThreshold"];BasicExample.parameters={...BasicExample.parameters,docs:{...BasicExample.parameters?.docs,source:{originalSource:"args => <Viz config={configify(args, argTypes)} />",...BasicExample.parameters?.docs?.source}}},NestedData.parameters={...NestedData.parameters,docs:{...NestedData.parameters?.docs,source:{originalSource:"args => <Viz config={configify(args, argTypes)} />",...NestedData.parameters?.docs?.source}}},ChangingTilingMethod.parameters={...ChangingTilingMethod.parameters,docs:{...ChangingTilingMethod.parameters?.docs,source:{originalSource:"args => <Viz config={configify(args, argTypes)} />",...ChangingTilingMethod.parameters?.docs?.source}}},SmallDataThreshold.parameters={...SmallDataThreshold.parameters,docs:{...SmallDataThreshold.parameters?.docs,source:{originalSource:"args => <Viz config={configify(args, argTypes)} />",...SmallDataThreshold.parameters?.docs?.source}}}}}]);